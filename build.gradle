plugins {
  id "org.sonarqube" version "2.4"
  id "java"
  id "war"
  id "maven"
}

// define the version for the project when publishing to maven
group "boc.impersonate"
version getB2Version()

ext {
    learnVersion = "3000.1.0-rel.52"
}

String getB2Version() {
  File mfFile = new File(file(webAppDir), 'WEB-INF/bb-manifest.xml');
  def manifest = new XmlSlurper().parse(mfFile);
  return manifest.plugin.version['@value'];
}

repositories {
    maven { url "https://repo.maven.apache.org/maven2" }
    maven {
        url "https://maven.blackboard.com/content/repositories/releases/"
    }
}

configurations {
    buildUtils
}



// define the project's dependencies
dependencies {
    // compile group: 'log4j', name: 'log4j', version: '1.2.17'

    providedCompile "javax.servlet:servlet-api:2.5",
                    "javax.servlet.jsp:jsp-api:2.1"

    // Dependencies are libraries needed to build, but should not be included in the B2 WAR.
    // You should NEVER include Learn JARs (other than webapis) in your B2.
    providedCompile("blackboard.platform:bb-platform:$rootProject.learnVersion") { transitive = false }
    providedCompile("blackboard.platform:bb-taglibs:$rootProject.learnVersion") { transitive = false }

    // Building a Spring B2?  Use our Spring APIs!
    // compile "blackboard.platform:bb-spring-webapi:10.1"

    // Include the Blackboard security APIs for protecting your B2.
    // providedCompile "blackboard.plugin:security:1.0:api"

    // Dependencies that are only necessary at runtime so should be included in the WAR
    // runtime "org.javassist:javassist:3.17.1-GA"

    // buildUtils "org.oscelot:b2deploy-task:0.1.0"
}

// Add a task to deploy a B2 using starting block
/* task deployB2(dependsOn: "war") << {
    ant.taskdef(name: "b2deploy", classname: "org.oscelot.ant.B2DeployTask", classpath: project.configurations.buildUtils.asPath)
    ant.b2deploy(localfilepath: project.war.archivePath, host: project.ext.deployServer, courseorgavailable: 'true', clean: 'true', webappName: 'bb-starting-block-' + project.ext.deployInstance)
} */


// DEFAULT TASK MODIFICATIONS
//Java 8 compatibility
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}
// Task for generating Maven POM for Github dependencies analysis https://docs.gradle.org/current/userguide/maven_plugin.html#sec:maven_convention_methods
// see also https://www.baeldung.com/gradle-build-to-maven-pom
install {
    doLast{
        copy {
            from file("$buildDir/libs")
            into file("/war-building-blocks")
        }
    }
    repositories {
        mavenInstaller {
            pom.writeTo("/pom.xml")
        }
    }
}
